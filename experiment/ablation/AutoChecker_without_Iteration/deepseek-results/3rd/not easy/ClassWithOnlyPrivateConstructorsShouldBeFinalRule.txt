开始

========================================== Rule ClassWithOnlyPrivateConstructorsShouldBeFinalRule ===========================================
一共 22 个测试用例
正例 15 个
反例 7 个
38
34
85
71
40
37
96
79
12
10
30
28
11
8
97
91
157
137
15
13
12
10
125
108
9
7
19
14
85
71
12
9
12
10
11
9
10
8
90
76
92
78
27
17
9
7
23
19
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is public.
3. Get all constructors declared in the class.
4. Check whether all constructors are private.
5. Check whether the class is final.
If the class is public, all its constructors are private, and the class is not final, then this test case violates the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is public.* 匹配到的元操作或API：
logic: Check whether the class is public.
most similar meta operation: Check whether the class is public
cosine Similarity: 0.9849746227264404
*Get all constructors declared in the class.* 匹配到的元操作或API：
query: Get all constructors declared in the class.
most similar API: get declared annotations of constructor
cosine Similarity: 0.8338632583618164
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is abstract.
3. Get all constructors declared in the class.
4. Check whether all constructors are private.
5. Check whether the class is final.
If the class is not abstract, all its constructors are private, and the class is not final, then this test case violates the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is abstract.* 匹配到的元操作或API：
logic: Check whether the class is abstract.
most similar meta operation: Check whether the class is abstract
cosine Similarity: 0.9844731092453003
*Get all constructors declared in the class.* 匹配到的元操作或API：
query: Get all constructors declared in the class.
most similar API: get declared annotations of constructor
cosine Similarity: 0.8338632583618164
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
=========================logics=========================
1. Check whether the class is final.
2. Check whether the class has any constructors.
3. Check whether all constructors are private.
4. Check whether the class is public.
5. Check whether the class is in a compilation unit (i.e., not an inner class or anonymous class).

If the class is not final, has at least one constructor, all constructors are private, the class is public, and the class is in a compilation unit, then this test case violates the rule. Otherwise, it adheres to the rule.

In this test case:
1. The class is final, so it adheres to the rule.
2. The class has one constructor.
3. The constructor is private.
4. The class is public.
5. The class is in a compilation unit.

Since the class is already final, it does not violate the rule. The description "ok 1" and the number of violations being 0 are correct.
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
*Check whether the class has any constructors.* 匹配到的元操作或API：
query: Check whether the class has any constructors.
most similar API: Check whether the constructor is any annotation present
cosine Similarity: 0.8688066601753235
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class is public.* 匹配到的元操作或API：
logic: Check whether the class is public.
most similar meta operation: Check whether the class is public
cosine Similarity: 0.9849746227264404
*Check whether the class is in a compilation unit (i.e., not an inner class or anonymous class).* 匹配到的元操作或API：
query: Check whether the class is in a compilation unit (i.e., not an inner class or anonymous class).
most similar API: Check whether the compilation unit is unnamed class
cosine Similarity: 0.8640639781951904
*The class is final, so it adheres to the rule.* 匹配到的元操作或API：
未匹配成功元操作或API
*The class has one constructor.* 匹配到的元操作或API：
未匹配成功元操作或API
*The constructor is private.* 匹配到的元操作或API：
logic: The constructor is private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.8586611747741699
*The class is public.* 匹配到的元操作或API：
未匹配成功元操作或API
*The class is in a compilation unit.* 匹配到的元操作或API：
query: The class is in a compilation unit.
most similar API: get class of compilation unit
cosine Similarity: 0.8256197571754456
119
103
107
91
149
133
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is public.
3. Get all constructors declared in the class.
4. Check whether the constructor is private.
5. Check whether the constructor is public.
6. Check whether the class is final.
If the class is public, has at least one public constructor, and is not declared as final, then this test case does not violate the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is public.* 匹配到的元操作或API：
logic: Check whether the class is public.
most similar meta operation: Check whether the class is public
cosine Similarity: 0.9849746227264404
*Get all constructors declared in the class.* 匹配到的元操作或API：
query: Get all constructors declared in the class.
most similar API: get declared annotations of constructor
cosine Similarity: 0.8338632583618164
*Check whether the constructor is private.* 匹配到的元操作或API：
logic: Check whether the constructor is private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.9866331219673157
*Check whether the constructor is public.* 匹配到的元操作或API：
logic: Check whether the constructor is public.
most similar meta operation: Check whether the constructor is public
cosine Similarity: 0.985020637512207
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
=========================logics=========================
1. Check whether the class is abstract.
2. Check whether the class is public.
3. Get all constructors declared in the class.
4. Check whether any constructor is public.
5. Check whether any constructor is private.
6. Check whether the class is final.

If the class is abstract and has at least one public constructor, it does not violate the rule, even if it also has private constructors. This is because the class can still be extended using the public constructor. Therefore, the test case does not violate the rule.
*Check whether the class is abstract.* 匹配到的元操作或API：
logic: Check whether the class is abstract.
most similar meta operation: Check whether the class is abstract
cosine Similarity: 0.9844731092453003
*Check whether the class is public.* 匹配到的元操作或API：
logic: Check whether the class is public.
most similar meta operation: Check whether the class is public
cosine Similarity: 0.9849746227264404
*Get all constructors declared in the class.* 匹配到的元操作或API：
query: Get all constructors declared in the class.
most similar API: get declared annotations of constructor
cosine Similarity: 0.8338632583618164
*Check whether any constructor is public.* 匹配到的元操作或API：
logic: Check whether any constructor is public.
most similar meta operation: Check whether the constructor is public
cosine Similarity: 0.9498740434646606
*Check whether any constructor is private.* 匹配到的元操作或API：
logic: Check whether any constructor is private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.9583085775375366
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
94
78
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is public.
3. Get all constructors of the class.
4. Check whether all constructors are private.
5. Check whether the class has any inner classes.
6. For each inner class, check whether it extends the outer class.
7. Check whether the inner class is public and static.
8. Check whether the inner class has a constructor that can call the super constructor of the outer class.

If the class is public, all its constructors are private, and it has at least one public static inner class that extends the outer class and can call the super constructor, then this test case does not violate the rule. Otherwise, it may violate the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is public.* 匹配到的元操作或API：
logic: Check whether the class is public.
most similar meta operation: Check whether the class is public
cosine Similarity: 0.9849746227264404
*Get all constructors of the class.* 匹配到的元操作或API：
query: Get all constructors of the class.
most similar API: get parents of type of constructor
cosine Similarity: 0.8007241487503052
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class has any inner classes.* 匹配到的元操作或API：
logic: Check whether the class has any inner classes.
most similar meta operation: Check whether the class is inner class
cosine Similarity: 0.9316835403442383
*For each inner class, check whether it extends the outer class.* 匹配到的元操作或API：
logic: For each inner class, check whether it extends the outer class.
most similar meta operation: Check whether the class is inner class
cosine Similarity: 0.8503604531288147
*Check whether the inner class is public and static.* 匹配到的元操作或API：
logic: Check whether the inner class is public and static.
most similar meta operation: Check whether the class is inner class
cosine Similarity: 0.8747456073760986
*Check whether the inner class has a constructor that can call the super constructor of the outer class.* 匹配到的元操作或API：
未匹配成功元操作或API
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is public.
3. Get all constructors of the class.
4. Check whether all constructors are private.
5. Check whether the class has any subclasses.
6. Get the constructors of the subclass.
7. Check whether the subclass constructor calls the super constructor.

If a class is public, has all private constructors, and has a subclass that calls the super constructor, then this test case does not violate the rule. Otherwise, it may violate the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is public.* 匹配到的元操作或API：
logic: Check whether the class is public.
most similar meta operation: Check whether the class is public
cosine Similarity: 0.9849746227264404
*Get all constructors of the class.* 匹配到的元操作或API：
query: Get all constructors of the class.
most similar API: get parents of type of constructor
cosine Similarity: 0.8007241487503052
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class has any subclasses.* 匹配到的元操作或API：
未匹配成功元操作或API
*Get the constructors of the subclass.* 匹配到的元操作或API：
query: Get the constructors of the subclass.
most similar API: get parents of type of constructor
cosine Similarity: 0.8192855715751648
*Check whether the subclass constructor calls the super constructor.* 匹配到的元操作或API：
未匹配成功元操作或API
=========================logics=========================
1. Get the name of class Foo.
2. Check whether the class Foo is public.
3. Get the constructors of class Foo.
4. Check whether all constructors of class Foo are private.
5. Get the name of class Bar.
6. Check whether class Bar extends class Foo.
7. Get the constructors of class Bar.
8. Check whether the constructors of class Bar are public.
9. Check whether the classes Foo and Bar are in the same compilation unit.

If class Foo is public, all its constructors are private, and class Bar extends class Foo and is in the same compilation unit, then this test case does not violate the rule. The rule is not violated because the subclass Bar can call the private constructor of Foo within the same compilation unit.
*Get the name of class Foo.* 匹配到的元操作或API：
logic: Get the name of class Foo.
most similar meta operation: Get the name of class
cosine Similarity: 0.9185539484024048
*Check whether the class Foo is public.* 匹配到的元操作或API：
logic: Check whether the class Foo is public.
most similar meta operation: Check whether the class is public
cosine Similarity: 0.9486993551254272
*Get the constructors of class Foo.* 匹配到的元操作或API：
query: Get the constructors of class Foo.
most similar API: get parents of type of constructor
cosine Similarity: 0.8240610361099243
*Check whether all constructors of class Foo are private.* 匹配到的元操作或API：
logic: Check whether all constructors of class Foo are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.9146392941474915
*Get the name of class Bar.* 匹配到的元操作或API：
logic: Get the name of class Bar.
most similar meta operation: Get the name of class
cosine Similarity: 0.8576033711433411
*Check whether class Bar extends class Foo.* 匹配到的元操作或API：
未匹配成功元操作或API
*Get the constructors of class Bar.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether the constructors of class Bar are public.* 匹配到的元操作或API：
logic: Check whether the constructors of class Bar are public.
most similar meta operation: Check whether the constructor is public
cosine Similarity: 0.8936977386474609
*Check whether the classes Foo and Bar are in the same compilation unit.* 匹配到的元操作或API：
query: Check whether the classes Foo and Bar are in the same compilation unit.
most similar API: Check whether the class or interface type is reference to class same compilation unit
cosine Similarity: 0.857440173625946
117
102
144
127
77
63
97
81
96
81
89
74
97
80
93
78
95
78
83
69
95
80
77
63
94
78
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is final.
3. Get all constructors declared in the class.
4. Check whether each constructor is private.
5. Check whether the class has any protected or public constructors.
6. Check whether the class is in a compilation unit that allows extension (e.g., not a package-private class in a different package).

If the class has only private constructors and no protected or public constructors, and it is not in a compilation unit that allows extension, then the class may be made final. In this test case, since there is a protected constructor, the class does not violate the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
*Get all constructors declared in the class.* 匹配到的元操作或API：
query: Get all constructors declared in the class.
most similar API: get declared annotations of constructor
cosine Similarity: 0.8338632583618164
*Check whether each constructor is private.* 匹配到的元操作或API：
logic: Check whether each constructor is private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.9442476630210876
*Check whether the class has any protected or public constructors.* 匹配到的元操作或API：
logic: Check whether the class has any protected or public constructors.
most similar meta operation: Check whether the constructor is protected
cosine Similarity: 0.9136686325073242
*Check whether the class is in a compilation unit that allows extension (e.g., not a package-private class in a different package).* 匹配到的元操作或API：
query: Check whether the class is in a compilation unit that allows extension (e.g., not a package-private class in a different package).
most similar API: Check whether the class or interface type is reference to class same compilation unit
cosine Similarity: 0.8018206357955933
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is final.
3. Get all constructors of the class.
4. Check whether each constructor is private.
5. Check whether the class is package-private (default access modifier).
6. Check whether the class has any superclasses or implemented interfaces.

If the class is not final, has only private constructors, is package-private, and has no superclasses or implemented interfaces, then it cannot be extended from outside its compilation unit, and the rule is violated. In this test case, the class has one package-private constructor and one private constructor, so it is not required to be final, and the rule is not violated.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
*Get all constructors of the class.* 匹配到的元操作或API：
query: Get all constructors of the class.
most similar API: get parents of type of constructor
cosine Similarity: 0.8007241487503052
*Check whether each constructor is private.* 匹配到的元操作或API：
logic: Check whether each constructor is private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.9442476630210876
*Check whether the class is package-private (default access modifier).* 匹配到的元操作或API：
logic: Check whether the class is package-private (default access modifier).
most similar meta operation: Check whether the class is default package-private
cosine Similarity: 0.9158898591995239
*Check whether the class has any superclasses or implemented interfaces.* 匹配到的元操作或API：
query: Check whether the class has any superclasses or implemented interfaces.
most similar API: Check whether the class or interface equals
cosine Similarity: 0.8444138169288635
99
82
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is an inner class.
3. Get all constructors of the class.
4. Check whether all constructors are private.
5. Check whether the class is final.
If the class is not final, is an inner class, and all its constructors are private, then this test case violates the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is an inner class.* 匹配到的元操作或API：
logic: Check whether the class is an inner class.
most similar meta operation: Check whether the class is inner class
cosine Similarity: 0.9831405878067017
*Get all constructors of the class.* 匹配到的元操作或API：
query: Get all constructors of the class.
most similar API: get parents of type of constructor
cosine Similarity: 0.8007241487503052
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
111
94
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is public.
3. Check whether the class is static.
4. Check whether the class is inner class.
5. Get all constructors of the class.
6. Check whether all constructors are private.
7. Check whether the class is extended within the compilation unit.
8. Check whether the class is final.

If the class is public, static, and an inner class, and all its constructors are private, and it is extended within the compilation unit, and it is not final, then this test case violates the rule. Otherwise, it does not violate the rule. In this case, the class `InputBits` is extended within the compilation unit by `Sub`, and all its constructors are private, but it is not final. However, since it is extended within the compilation unit, it does not violate the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is public.* 匹配到的元操作或API：
logic: Check whether the class is public.
most similar meta operation: Check whether the class is public
cosine Similarity: 0.9849746227264404
*Check whether the class is static.* 匹配到的元操作或API：
logic: Check whether the class is static.
most similar meta operation: Check whether the class is static
cosine Similarity: 0.9831520318984985
*Check whether the class is inner class.* 匹配到的元操作或API：
logic: Check whether the class is inner class.
most similar meta operation: Check whether the class is inner class
cosine Similarity: 0.987544596195221
*Get all constructors of the class.* 匹配到的元操作或API：
query: Get all constructors of the class.
most similar API: get parents of type of constructor
cosine Similarity: 0.8007241487503052
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class is extended within the compilation unit.* 匹配到的元操作或API：
query: Check whether the class is extended within the compilation unit.
most similar API: Check whether the class or interface type is reference to class same compilation unit
cosine Similarity: 0.8216884732246399
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
=========================logics=========================
1. Get the name of class.
2. Check whether the class is inner class.
3. Check whether the class is private.
4. Get all constructors of class.
5. Check whether the constructor is private.
6. Check whether the class is final.
If the class is private inner class and all its constructors are private and the class is not final, then this test case violate the rule.
*Get the name of class.* 匹配到的元操作或API：
logic: Get the name of class.
most similar meta operation: Get the name of class
cosine Similarity: 0.9738673567771912
*Check whether the class is inner class.* 匹配到的元操作或API：
logic: Check whether the class is inner class.
most similar meta operation: Check whether the class is inner class
cosine Similarity: 0.987544596195221
*Check whether the class is private.* 匹配到的元操作或API：
logic: Check whether the class is private.
most similar meta operation: Check whether the class is private
cosine Similarity: 0.9853935241699219
*Get all constructors of class.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether the constructor is private.* 匹配到的元操作或API：
logic: Check whether the constructor is private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.9866331219673157
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is private.
3. Check whether the class is static.
4. Check whether the class is an inner class.
5. Get all constructors of the class.
6. Check whether all constructors are private.
7. Check whether the class has any subclasses.
8. Check whether the subclass is in the same compilation unit.
9. Check whether the subclass can call the super constructor.

If the class is private, static, and an inner class, and all its constructors are private, and it has a subclass in the same compilation unit that cannot call the super constructor, then the class may be made final because it cannot be extended from outside its compilation unit. In this test case, the class `InputBits` is private, static, and an inner class with an implicitly private default constructor, and it has a subclass `Sub` in the same compilation unit that cannot call the super constructor. Therefore, the class `InputBits` may be made final, and the test case does not violate the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is private.* 匹配到的元操作或API：
logic: Check whether the class is private.
most similar meta operation: Check whether the class is private
cosine Similarity: 0.9853935241699219
*Check whether the class is static.* 匹配到的元操作或API：
logic: Check whether the class is static.
most similar meta operation: Check whether the class is static
cosine Similarity: 0.9831520318984985
*Check whether the class is an inner class.* 匹配到的元操作或API：
logic: Check whether the class is an inner class.
most similar meta operation: Check whether the class is inner class
cosine Similarity: 0.9831405878067017
*Get all constructors of the class.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class has any subclasses.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether the subclass is in the same compilation unit.* 匹配到的元操作或API：
query: Check whether the subclass is in the same compilation unit.
most similar API: Check whether the class or interface type is reference to class same compilation unit
cosine Similarity: 0.8747336864471436
*Check whether the subclass can call the super constructor.* 匹配到的元操作或API：
未匹配成功元操作或API
106
91
156
136
116
101
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is abstract.
3. Check whether the class is private.
4. Get all constructors of the class.
5. Check whether all constructors are private.
6. Check whether the class has any abstract methods.
7. Check whether the class is an inner class.
8. Check whether the class is extended by an anonymous class.

If the class is private, abstract, and has abstract methods, and it is extended by an anonymous class within the same compilation unit, then it should not be reported as a violation of the rule. This test case adheres to the rule because the private abstract class `Base` is extended by an anonymous class within the `Outer` class, and it is not intended to be extended outside its compilation unit. Therefore, the number of violations is 0.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is abstract.* 匹配到的元操作或API：
logic: Check whether the class is abstract.
most similar meta operation: Check whether the class is abstract
cosine Similarity: 0.9844731092453003
*Check whether the class is private.* 匹配到的元操作或API：
logic: Check whether the class is private.
most similar meta operation: Check whether the class is private
cosine Similarity: 0.9853935241699219
*Get all constructors of the class.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class has any abstract methods.* 匹配到的元操作或API：
logic: Check whether the class has any abstract methods.
most similar meta operation: Check whether the method is abstract
cosine Similarity: 0.9152114391326904
*Check whether the class is an inner class.* 匹配到的元操作或API：
logic: Check whether the class is an inner class.
most similar meta operation: Check whether the class is inner class
cosine Similarity: 0.9831405878067017
*Check whether the class is extended by an anonymous class.* 匹配到的元操作或API：
logic: Check whether the class is extended by an anonymous class.
most similar meta operation: Check whether the class is anonymous class
cosine Similarity: 0.873332142829895
98
81
94
78
96
80
84
70
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is abstract.
3. Check whether the class is private.
4. Check whether the class has any abstract methods.
5. Check whether the class has any constructors.
6. Check whether all constructors are private.
7. Check whether the class is generic.
8. Check whether the class is located in a compilation unit (i.e., not an inner class or anonymous class).

If the class is private, abstract, has abstract methods, and all its constructors are private, then it should be ignored by the rule, as it cannot be extended from outside its compilation unit. This test case adheres to the rule, and the number of violations is 0.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is abstract.* 匹配到的元操作或API：
logic: Check whether the class is abstract.
most similar meta operation: Check whether the class is abstract
cosine Similarity: 0.9844731092453003
*Check whether the class is private.* 匹配到的元操作或API：
logic: Check whether the class is private.
most similar meta operation: Check whether the class is private
cosine Similarity: 0.9853935241699219
*Check whether the class has any abstract methods.* 匹配到的元操作或API：
logic: Check whether the class has any abstract methods.
most similar meta operation: Check whether the method is abstract
cosine Similarity: 0.9152114391326904
*Check whether the class has any constructors.* 匹配到的元操作或API：
query: Check whether the class has any constructors.
most similar API: Check whether the constructor call is anonymous class
cosine Similarity: 0.8337463736534119
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class is generic.* 匹配到的元操作或API：
query: Check whether the class is generic.
most similar API: Check whether the class or interface type equals
cosine Similarity: 0.8352688550949097
*Check whether the class is located in a compilation unit (i.e., not an inner class or anonymous class).* 匹配到的元操作或API：
query: Check whether the class is located in a compilation unit (i.e., not an inner class or anonymous class).
most similar API: Check whether the compilation unit is unnamed class
cosine Similarity: 0.8439126014709473
=========================logics=========================
1. Get the name of the class `Base`.
2. Check whether the class `Base` is abstract.
3. Check whether the class `Base` is private.
4. Get all constructors of the class `Base`.
5. Check whether all constructors of the class `Base` are private.
6. Get all methods of the class `Base`.
7. Check whether the class `Base` has at least one abstract method.
8. Get the name of the class `Sub`.
9. Check whether the class `Sub` extends the class `Base`.
10. Check whether the class `Sub` is final.

If the class `Base` is abstract, private, has no abstract methods, and all its constructors are private, and it has a subclass `Sub` that extends it, then this test case does not violate the rule. The rule is designed to ignore private abstract classes without abstract methods but with subclasses.
*Get the name of the class `Base`.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether the class `Base` is abstract.* 匹配到的元操作或API：
logic: Check whether the class `Base` is abstract.
most similar meta operation: Check whether the class is abstract
cosine Similarity: 0.8949377536773682
*Check whether the class `Base` is private.* 匹配到的元操作或API：
logic: Check whether the class `Base` is private.
most similar meta operation: Check whether the class is private
cosine Similarity: 0.8974869251251221
*Get all constructors of the class `Base`.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether all constructors of the class `Base` are private.* 匹配到的元操作或API：
logic: Check whether all constructors of the class `Base` are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.8850917816162109
*Get all methods of the class `Base`.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether the class `Base` has at least one abstract method.* 匹配到的元操作或API：
logic: Check whether the class `Base` has at least one abstract method.
most similar meta operation: Check whether the method is abstract
cosine Similarity: 0.8548809885978699
*Get the name of the class `Sub`.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether the class `Sub` extends the class `Base`.* 匹配到的元操作或API：
query: Check whether the class `Sub` extends the class `Base`.
most similar API: Check whether the extends list has descendant of type
cosine Similarity: 0.8031370639801025
*Check whether the class `Sub` is final.* 匹配到的元操作或API：
logic: Check whether the class `Sub` is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9066517353057861
=========================logics=========================
1. Get the name of class.
2. Check whether the class is abstract.
3. Check whether the class is private.
4. Get all constructors of the class.
5. Check whether all constructors are private.
6. Get all methods declared in the class.
7. Check whether any method is abstract.
8. Check whether the class has subclasses.
9. Check whether the class is located in a compilation unit that allows extension from outside.

If the class is private, abstract, has no abstract methods, all its constructors are private, and it has no subclasses, then this test case violates the rule.
*Get the name of class.* 匹配到的元操作或API：
logic: Get the name of class.
most similar meta operation: Get the name of class
cosine Similarity: 0.9738673567771912
*Check whether the class is abstract.* 匹配到的元操作或API：
logic: Check whether the class is abstract.
most similar meta operation: Check whether the class is abstract
cosine Similarity: 0.9844731092453003
*Check whether the class is private.* 匹配到的元操作或API：
logic: Check whether the class is private.
most similar meta operation: Check whether the class is private
cosine Similarity: 0.9853935241699219
*Get all constructors of the class.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Get all methods declared in the class.* 匹配到的元操作或API：
query: Get all methods declared in the class.
most similar API: get declared annotations of method
cosine Similarity: 0.837310254573822
*Check whether any method is abstract.* 匹配到的元操作或API：
logic: Check whether any method is abstract.
most similar meta operation: Check whether the method is abstract
cosine Similarity: 0.9592255353927612
*Check whether the class has subclasses.* 匹配到的元操作或API：
未匹配成功元操作或API
*Check whether the class is located in a compilation unit that allows extension from outside.* 匹配到的元操作或API：
query: Check whether the class is located in a compilation unit that allows extension from outside.
most similar API: Check whether the compilation unit is find boundary
cosine Similarity: 0.8060919046401978
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is abstract.
3. Get all constructors declared in the class.
4. Check whether all constructors are private.
5. Check whether the class is in a compilation unit that allows extension from outside.
6. Check whether the class contains any abstract methods.
7. Check whether the class is declared as abstract to prevent instantiation.

If the class is abstract, all its constructors are private, it does not contain any abstract methods, and it is declared as abstract to prevent instantiation, then this test case violates the rule. The class cannot be extended from outside its compilation unit, so it should be made final.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is abstract.* 匹配到的元操作或API：
logic: Check whether the class is abstract.
most similar meta operation: Check whether the class is abstract
cosine Similarity: 0.9844731092453003
*Get all constructors declared in the class.* 匹配到的元操作或API：
query: Get all constructors declared in the class.
most similar API: get declared annotations of constructor
cosine Similarity: 0.8338632583618164
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class is in a compilation unit that allows extension from outside.* 匹配到的元操作或API：
query: Check whether the class is in a compilation unit that allows extension from outside.
most similar API: Check whether the compilation unit is unnamed class
cosine Similarity: 0.8111420273780823
*Check whether the class contains any abstract methods.* 匹配到的元操作或API：
logic: Check whether the class contains any abstract methods.
most similar meta operation: Check whether the method is abstract
cosine Similarity: 0.9070536494255066
*Check whether the class is declared as abstract to prevent instantiation.* 匹配到的元操作或API：
logic: Check whether the class is declared as abstract to prevent instantiation.
most similar meta operation: Check whether the class is abstract
cosine Similarity: 0.8941954374313354
=========================logics=========================
1. Get the name of the class.
2. Check whether the class is public.
3. Get all constructors of the class.
4. Check whether all constructors are private.
5. Check whether the class is final.
6. Check whether the class has subclasses in the same compilation unit.
7. Check whether the class has subclasses in other compilation units.

If the class is public, all its constructors are private, it is not final, and it has no subclasses in the same compilation unit or other compilation units, then this test case violates the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class is public.* 匹配到的元操作或API：
logic: Check whether the class is public.
most similar meta operation: Check whether the class is public
cosine Similarity: 0.9849746227264404
*Get all constructors of the class.* 匹配到的元操作或API：
query: Get all constructors of the class.
most similar API: get parents of type of constructor
cosine Similarity: 0.8007241487503052
*Check whether all constructors are private.* 匹配到的元操作或API：
logic: Check whether all constructors are private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.936521589756012
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
*Check whether the class has subclasses in the same compilation unit.* 匹配到的元操作或API：
query: Check whether the class has subclasses in the same compilation unit.
most similar API: Check whether the compilation unit has descendant of type
cosine Similarity: 0.8110435009002686
*Check whether the class has subclasses in other compilation units.* 匹配到的元操作或API：
query: Check whether the class has subclasses in other compilation units.
most similar API: Check whether the compilation unit has descendant of type
cosine Similarity: 0.809999406337738
99
82
=========================logics=========================
1. Get the name of the class.
2. Check whether the class has declared annotations.
3. Get a declared annotation of the class.
4. Check whether the class has the `@Value` annotation.
5. Get all constructors declared in the class.
6. Check whether the constructor is private.
7. Check whether the class is final.
If the class has only private constructors and is not marked as final, and it does not have the `@Value` annotation, then this test case violates the rule. However, since the class has the `@Value` annotation, it is considered compliant with the rule.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class has declared annotations.* 匹配到的元操作或API：
logic: Check whether the class has declared annotations.
most similar meta operation: Check whether class has declared annotations
cosine Similarity: 0.9833341240882874
*Get a declared annotation of the class.* 匹配到的元操作或API：
logic: Get a declared annotation of the class.
most similar meta operation: Get a declared annotation of class
cosine Similarity: 0.9829835295677185
*Check whether the class has the `@Value` annotation.* 匹配到的元操作或API：
query: Check whether the class has the `@Value` annotation.
most similar API: Check whether the primitive type is annotation present
cosine Similarity: 0.8152636885643005
*Get all constructors declared in the class.* 匹配到的元操作或API：
query: Get all constructors declared in the class.
most similar API: get declared annotations of constructor
cosine Similarity: 0.8338632583618164
*Check whether the constructor is private.* 匹配到的元操作或API：
logic: Check whether the constructor is private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.9866331219673157
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
=========================logics=========================
1. Get the name of the class.
2. Check whether the class has declared annotations.
3. Get a declared annotation of the class.
4. Check whether the class has the `@NoArgsConstructor` annotation.
5. Get all constructors declared in the class.
6. Check whether the constructor is private.
7. Check whether the class is final.
8. Check whether the class is in the same compilation unit as the test case.

If the class has a private constructor and is not marked as final, and it is in the same compilation unit as the test case, then this test case may violate the rule. However, since the class has the `@NoArgsConstructor` annotation from Lombok, which generates a public constructor, the class can be extended from outside its compilation unit, and thus the rule should not be violated.
*Get the name of the class.* 匹配到的元操作或API：
logic: Get the name of the class.
most similar meta operation: Get the name of class
cosine Similarity: 0.968898594379425
*Check whether the class has declared annotations.* 匹配到的元操作或API：
logic: Check whether the class has declared annotations.
most similar meta operation: Check whether class has declared annotations
cosine Similarity: 0.9833341240882874
*Get a declared annotation of the class.* 匹配到的元操作或API：
logic: Get a declared annotation of the class.
most similar meta operation: Get a declared annotation of class
cosine Similarity: 0.9829835295677185
*Check whether the class has the `@NoArgsConstructor` annotation.* 匹配到的元操作或API：
query: Check whether the class has the `@NoArgsConstructor` annotation.
most similar API: Check whether the constructor is any annotation present
cosine Similarity: 0.8382743000984192
*Get all constructors declared in the class.* 匹配到的元操作或API：
query: Get all constructors declared in the class.
most similar API: get declared annotations of constructor
cosine Similarity: 0.8338632583618164
*Check whether the constructor is private.* 匹配到的元操作或API：
logic: Check whether the constructor is private.
most similar meta operation: Check whether the constructor is private
cosine Similarity: 0.9866331219673157
*Check whether the class is final.* 匹配到的元操作或API：
logic: Check whether the class is final.
most similar meta operation: Check whether the class is final
cosine Similarity: 0.9887726306915283
*Check whether the class is in the same compilation unit as the test case.* 匹配到的元操作或API：
query: Check whether the class is in the same compilation unit as the test case.
most similar API: Check whether the class or interface type is reference to class same compilation unit
cosine Similarity: 0.8668316006660461
==========================第1轮生成checker========================
开始写checker
==========================The_first_checker_query=========================
You are an expert in writing java rule checkers and I need your help to generate a custom java rule checker in PMD tool version 7.0.0. 
I will give you a rule description and its several test cases.

The following is the description of the rule:
Rule description: Reports classes that may be made final because they cannot be extended from outside their compilation unit anyway. This is because all their constructors are private, so a subclass could not call the super constructor.;

The following are the test cases of the rule:
1. This is a negative test case
```java
// Simple violation
public class Foo {
    private Foo() { }
}
```
2. This is a negative test case
```java
// violation for abstract class
public class Foo {
    private Foo() { }
}
```
3. This is a positive test case
```java
// ok, class is final
public final class Foo {
    private Foo() { }
}
```
4. This is a positive test case
```java
// One public constructor, not required to be final
public class Foo {
    private Foo() { }
    public Foo(String param) { }
}
```
5. This is a positive test case
```java
// abstract class, one public constructor, not required to be final
public abstract class Foo {
    private Foo() { }
    public Foo(String param) { }
}
```
6. This is a positive test case
```java
// Ok, subclass using the private constructor
public class Foo {
    private Foo() { }

    public static class Bar extends Foo {
        public Bar() { }
    }
}
```
7. This is a positive test case
```java
// Ok, subclass using the private constructor of another subclass
public class Foo {
    public Foo() { }

    public static class Bar {
        private Bar() { }
    }

    public static class Barbie extends Bar {
        public Barbie() { }
    }
}
```
8. This is a positive test case
```java
// Ok, two classes
public class Foo {
    private Foo() { }
}
class Bar extends Foo {
    public Bar() { }
}
```
9. This is a positive test case
```java
// One protected constructor, not required to be final
class ClassWithOnlyPrivateConstructorsShouldBeFinal {
    private String string;

    protected ClassWithOnlyPrivateConstructorsShouldBeFinal(final Object object) {
        this(object.toString());
    }

    private ClassWithOnlyPrivateConstructorsShouldBeFinal(final String string) {
        super();

        setString(string);
    }

    public final void setString(final String string) {
        this.string = string;
    }

    public String getString() {
        return string;
    }
}
```
10. This is a positive test case
```java
// One package private constructor, not required to be final
class ClassWithOnlyPrivateConstructorsShouldBeFinal {
    private String string;

    ClassWithOnlyPrivateConstructorsShouldBeFinal(final Object object) {
        this(object.toString());
    }

    private ClassWithOnlyPrivateConstructorsShouldBeFinal(final String string) {
        super();

        setString(string);
    }

    public final void setString(final String string) {
        this.string = string;
    }

    public String getString() {
        return string;
    }
}
```
11. This is a negative test case
```java
// #2536 [java] ClassWithOnlyPrivateConstructorsShouldBeFinal can't detect inner class with only private constructor
public class Main209 {
    private static class InputBits {
        private InputBits(int number) { }
    }
}
```
12. This is a positive test case
```java
// Inner class with only private constructor extended within compilation unit (#2536)
public class Main209 {
    private static class InputBits {
        private InputBits(int number) { }
    }
    public static final class Sub extends InputBits {
        private Sub() {
            super(1);
        }
    }
}
```
13. This is a negative test case
```java
// Private inner class with no ctor and no usage
public class Main209 {
    private static class InputBits {
        // default ctor is implicitly private
    }
}
```
14. This is a positive test case
```java
// Private inner class with no ctor and usage
public class Main209 {
    private static class InputBits {
        // default ctor is implicitly private
    }
    public static final class Sub extends InputBits {}
}
```
15. This is a positive test case
```java
// Private abstract classes with abstract methods should be ignored #3668
public class Outer {
    private abstract class Base {
        abstract void run();
    }
    public void someMethod() {
        Base b = new Base() {
            void run() {}
        };
        b.run();
    }
}
```
16. This is a positive test case
```java
// Private abstract generic classes with abstract methods should be ignored #3668
import java.util.Comparator;
public class Outer {
    private abstract class Base<E> {
        abstract void run();
        abstract void sort(Comparator<E> comparator);
    }
    public void someMethod() {
        Base b = new Base<Object>() {
            void run() {}
            void sort(Comparator<Object> comparator) {}
        };
    }
}
```
17. This is a positive test case
```java
// Private abstract classes without abstract methods but with subclasses should be ignored #3668
public class Outer {
    private abstract class Base {
        private void run() {}
    }
    private final class Sub extends Base {}
}
```
18. This is a negative test case
```java
// Private abstract classes without abstract methods and subclasses #3668
public class Outer {
    private abstract class Base {
        private void run() {}
    }
}
```
19. This is a negative test case
```java
// Abstract outer classes should be flagged #3668
public abstract class FooUtils {
    private FooUtils() {
        // private constructor can't be called from sub classes,
        // so this class can't be extended
    }
    // note: this "abstract" class does not contain abstract methods
    // it was only declared as abstract to prevent instantiation
}
```
20. This is a negative test case
```java
// [java] ClassWithOnlyPrivateConstructorsShouldBeFinal - false negative when a compilation unit contains two class declarations #3851
public class Example { // false-negative here
    private Example() {
    }
}

class Another {
}
```
21. This is a positive test case
```java
// [java] ClassWithOnlyPrivateConstructorsShouldBeFinal should consider lombok's @Value #4200
import lombok.Value;

@Value
public class Test {
    private Test(int a, int b) {}
}
```
22. This is a positive test case
```java
// [java] ClassWithOnlyPrivateConstructorsShouldBeFinal false positive with Lombok's @NoArgsConstructor #4188
import lombok.NoArgsConstructor;
@NoArgsConstructor
class NoArgs1 { private NoArgs1(String a) {} } // no violation
```


The checker code framework(you must conform to):
```java
package net.sourceforge.pmd.lang.java.rule.design;
import net.sourceforge.pmd.lang.java.rule.AbstractJavaRulechainRule;
import net.sourceforge.pmd.lang.java.ast.*;
import net.sourceforge.pmd.lang.java.ast.internal.*;
import net.sourceforge.pmd.lang.java.types.*;
import net.sourceforge.pmd.lang.java.symbols.*;
import net.sourceforge.pmd.lang.java.ast.JavaNode;
import net.sourceforge.pmd.lang.ast.NodeStream;
import java.util.*;
import java.lang.*;

public class ClassWithOnlyPrivateConstructorsShouldBeFinalRule extends AbstractJavaRulechainRule {
    public rule_name() {
        super(node1_Of_AST_to_visit.class, node2_Of_AST_to_visit.class, ...);
    }
    @Override
    public Object visit(node1_Of_AST_to_visit node, Object data) {
        return super.visit(node, data);
    }
    @Override
    public Object visit(node2_Of_AST_to_visit node, Object data) {
        return super.visit(node, data);
    }
    ...
}
```
Some useful packages are already imported, if you need other packages, please import additionally.
Please give me the complete checker code including the import info, do not contain pseudocode, and do not give it step by step. No comment needed.

Below are some APIs and code snippets consisting of existing APIs, they implement specific functionality, you can selectively use them directly without changing it if you need:
1. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public java.lang.String getSimpleName()
2. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public boolean isPublic()
3. net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration: public net.sourceforge.pmd.lang.ast.NodeStream<ASTAnnotation> getDeclaredAnnotations()
4. net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration: public boolean isPrivate()
5. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public boolean isFinal()
6. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public boolean isAbstract()
7. net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration: public boolean isAnyAnnotationPresent(java.util.Collection), //Checks whether any annotation is present on this node. @param binaryNames            Collection that contains binary names of annotations.            Note: for now, canonical names are tolerated, this may be changed in PMD 7. @return <code>true</code> if any annotation is present on this node, else <code>false</code>
8. net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit: public boolean isUnnamedClass()
9. net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit: public java.lang.Class<Class<?> getClass()
10. net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration: public boolean isPublic()
11. net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration: public java.util.List<List<T> getParentsOfType(java.lang.Class)
12. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public boolean isNested()
13. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceType: public boolean isReferenceToClassSameCompilationUnit(), //Checks whether the type this node is referring to is declared within the same compilation unit - either a class/interface or a enum type. You want to check this, if {@link #getType()} is null. @return {@code true} if this node referencing a type in the same compilation unit, {@code false} otherwise. @deprecated This may be removed once type resolution is afoot
14. net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration: public boolean isProtected()
15. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public boolean isPackagePrivate()
16. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public boolean equals(java.lang.Object)
17. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public boolean isStatic()
18. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public boolean isPrivate()
19. net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration: public boolean isAbstract()
20. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public boolean isAnonymous()
21. net.sourceforge.pmd.lang.java.ast.ASTConstructorCall: public boolean isAnonymousClass(), //Returns true if this expression defines a body, which is compiled to an anonymous class. If this method returns false.
22. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceType: public boolean equals(java.lang.Object)
23. net.sourceforge.pmd.lang.java.ast.ASTExtendsList: public boolean hasDescendantOfType(java.lang.Class)
24. net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration: public net.sourceforge.pmd.lang.ast.NodeStream<ASTAnnotation> getDeclaredAnnotations()
25. net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit: public boolean isFindBoundary()
26. net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit: public boolean hasDescendantOfType(java.lang.Class)
27. net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: public net.sourceforge.pmd.lang.ast.NodeStream<ASTAnnotation> getDeclaredAnnotations()
28. net.sourceforge.pmd.lang.java.ast.ASTPrimitiveType: public boolean isAnnotationPresent(java.lang.Class), //Returns true if an annotation with the given type is applied to this node.

1.  //Check whether class has declared annotations
```java
import net.sourceforge.pmd.lang.java.ast.*;
import net.sourceforge.pmd.lang.ast.NodeStream;
public boolean hasAnnotations(ASTClassOrInterfaceDeclaration node){
    NodeStream<ASTAnnotation> annotations = node.getDeclaredAnnotations();
    return annotations.nonEmpty();
}
```


Below are some edge-related APIs to help traverse abstract syntax tree, if you need, you can use them:
1. public net.sourceforge.pmd.lang.ast.NodeStream<JavaNode> children()
2. public net.sourceforge.pmd.lang.ast.NodeStream<JavaNode> children(java.lang.Class)
3. public N getChild(int i)
4. public N getFirstChild()
5. public N getLastChild()
6. public N firstChild(java.lang.Class)
7. public int getNumChildren()
8. public int getIndexInParent()
9. public net.sourceforge.pmd.lang.ast.NodeStream.DescendantNodeStream<JavaNode> descendants()
10. public net.sourceforge.pmd.lang.ast.NodeStream.DescendantNodeStream<JavaNode> descendants(java.lang.Class)
11. public net.sourceforge.pmd.lang.ast.NodeStream.DescendantNodeStream<JavaNode> descendantsOrSelf()
12. public N getParent()
13. public N getNthParent(int i)
14. public net.sourceforge.pmd.lang.ast.NodeStream<JavaNode> ancestors()
15. public net.sourceforge.pmd.lang.ast.NodeStream<JavaNode> ancestors(java.lang.Class)
16. public net.sourceforge.pmd.lang.ast.NodeStream<JavaNode> ancestorsOrSelf()
17. public N getPreviousSibling()
18. public N getNextSibling()

Please do not use the following API:


==========5轮中每一轮为第一个测试用例生成的checker===============

第一个测试用例生成的checker开始编译
一开始编译是否通过：
True
编译通过
结束

规则执行完毕，时间总花销： 1243.573261976242 秒
