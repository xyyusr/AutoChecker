开始

========================================== Rule BrokenNullCheckRule ===========================================
一共 25 个测试用例
正例 15 个
反例 10 个
==========================第1轮生成checker========================
开始写checker
==========================The_first_checker_query=========================
You are an expert in writing java rule checkers and I need your help to generate a custom java rule checker in PMD tool version 7.0.0. 
I will give you the rule description, please give me the complete checker code of the rule including the import info, do not contain pseudocode, and do not give it step by step. No comment needed.

Rule description: The null check is broken since it will throw a NullPointerException itself. It is likely that you used || instead of && or vice versa.;

The checker code framework(you must conform to):
```java
package net.sourceforge.pmd.lang.java.rule.errorprone;
import net.sourceforge.pmd.lang.java.rule.AbstractJavaRulechainRule;
import net.sourceforge.pmd.lang.java.ast.*;
import net.sourceforge.pmd.lang.java.ast.internal.*;
import net.sourceforge.pmd.lang.java.types.*;
import net.sourceforge.pmd.lang.java.symbols.*;
import net.sourceforge.pmd.lang.java.ast.JavaNode;
import net.sourceforge.pmd.lang.ast.NodeStream;
import java.util.*;
import java.lang.*;

public class BrokenNullCheckRule extends AbstractJavaRulechainRule {
    public rule_name() {
        super(node1_Of_AST_to_visit.class, node2_Of_AST_to_visit.class, ...);
    }
    @Override
    public Object visit(node1_Of_AST_to_visit node, Object data) {
        return super.visit(node, data);
    }
    @Override
    public Object visit(node2_Of_AST_to_visit node, Object data) {
        return super.visit(node, data);
    }
    ...
}
```
Some useful packages are already imported, if you need other packages, please import additionally.

==========5轮中每一轮为第一个测试用例生成的checker===============
package net.sourceforge.pmd.lang.java.rule.errorprone;


import net.sourceforge.pmd.lang.java.rule.AbstractJavaRulechainRule;
import net.sourceforge.pmd.lang.java.ast. *;
import net.sourceforge.pmd.lang.java.ast.internal. *;
import net.sourceforge.pmd.lang.java.types. *;
import net.sourceforge.pmd.lang.java.symbols. *;
import net.sourceforge.pmd.lang.ast.NodeStream;
public class BrokenNullCheckRule extends AbstractJavaRulechainRule {

    public BrokenNullCheckRule() {
        super(ASTConditionalExpression.class);
    }

    @Override
    public Object visit(ASTConditionalExpression node, Object data) {
        if (node.jjtGetNumChildren() != 3) {
            return super.visit(node, data);
        }
        Node first = node.jjtGetChild(0);
        if (first instanceof ASTEqualityExpression) {
            if (isNullCheck((ASTEqualityExpression) first)) {
                Node second = node.jjtGetChild(1);
                if (second instanceof ASTPrimaryExpression) {
                    if (isSameVariable((ASTEqualityExpression) first, (ASTPrimaryExpression) second)) {
                        addViolation(data, node);
                    }
                }
            }
        }
        return super.visit(node, data);
    }

    private boolean isNullCheck(ASTEqualityExpression node) {
        if (node.jjtGetNumChildren() != 2) {
            return false;
        }
        if (node.jjtGetChild(0) instanceof ASTPrimaryExpression) {
            if (node.jjtGetChild(1) instanceof ASTNullLiteral) {
                return true;
            }
        }
        return false;
    }

    private boolean isSameVariable(ASTEqualityExpression equality, ASTPrimaryExpression primary) {
        if (equality.jjtGetChild(0).jjtGetChild(0).jjtGetChild(0).jjtGetChild(0).getImage().equals(primary.jjtGetChild(0).jjtGetChild(0).jjtGetChild(0).getImage())) {
            return true;
        }
        return false;
    }
}
第一个测试用例生成的checker开始编译
一开始编译是否通过：
False
编译错误不在预期范围内，重新生成
==========================第2轮生成checker========================
开始写checker
==========================The_first_checker_query=========================
You are an expert in writing java rule checkers and I need your help to generate a custom java rule checker in PMD tool version 7.0.0. 
I will give you the rule description, please give me the complete checker code of the rule including the import info, do not contain pseudocode, and do not give it step by step. No comment needed.

Rule description: The null check is broken since it will throw a NullPointerException itself. It is likely that you used || instead of && or vice versa.;

The checker code framework(you must conform to):
```java
package net.sourceforge.pmd.lang.java.rule.errorprone;
import net.sourceforge.pmd.lang.java.rule.AbstractJavaRulechainRule;
import net.sourceforge.pmd.lang.java.ast.*;
import net.sourceforge.pmd.lang.java.ast.internal.*;
import net.sourceforge.pmd.lang.java.types.*;
import net.sourceforge.pmd.lang.java.symbols.*;
import net.sourceforge.pmd.lang.java.ast.JavaNode;
import net.sourceforge.pmd.lang.ast.NodeStream;
import java.util.*;
import java.lang.*;

public class BrokenNullCheckRule extends AbstractJavaRulechainRule {
    public rule_name() {
        super(node1_Of_AST_to_visit.class, node2_Of_AST_to_visit.class, ...);
    }
    @Override
    public Object visit(node1_Of_AST_to_visit node, Object data) {
        return super.visit(node, data);
    }
    @Override
    public Object visit(node2_Of_AST_to_visit node, Object data) {
        return super.visit(node, data);
    }
    ...
}
```
Some useful packages are already imported, if you need other packages, please import additionally.

==========5轮中每一轮为第一个测试用例生成的checker===============
package net.sourceforge.pmd.lang.java.rule.errorprone;


import net.sourceforge.pmd.lang.java.rule.AbstractJavaRulechainRule;
import net.sourceforge.pmd.lang.java.ast. *;
import net.sourceforge.pmd.lang.java.ast.internal. *;
import net.sourceforge.pmd.lang.java.types. *;
import net.sourceforge.pmd.lang.java.symbols. *;
import net.sourceforge.pmd.lang.ast.NodeStream;
public class BrokenNullCheckRule extends AbstractJavaRulechainRule {

    public BrokenNullCheckRule() {
        super(ASTExpression.class);
    }

    @Override
    public Object visit(ASTExpression node, Object data) {
        if (node.getNumChildren() == 1 && node.getChild(0) instanceof ASTPrimaryExpression) {
            ASTPrimaryExpression primaryExpression = (ASTPrimaryExpression) node.getChild(0);
            if (primaryExpression.getNumChildren() >= 1 && primaryExpression.getChild(0) instanceof ASTNullLiteral) {
                addViolation(data, node);
            }
        }
        return super.visit(node, data);
    }
}
第一个测试用例生成的checker开始编译
一开始编译是否通过：
True
编译通过
结束

规则执行完毕，时间总花销： 75.87556862831116 秒
