<?xml version='1.0' encoding='utf-8'?>
<test-data>

    <test-code>
        <description>bad 4</description>
        <expected-problems>1</expected-problems>
        <code>
public class Foo {
    public class foo1{}
    public class foo2{}
    public class foo3{}
}</code>
    </test-code>

    <test-code>
        <description>bad 5</description>
        <expected-problems>1</expected-problems>
        <code>
// enum class is also considered
private enum Foo {
    x1,
    x2,
    x3
}</code>
    </test-code>

    <test-code>
        <description>bad 6</description>
        <expected-problems>1</expected-problems>
        <code>
public class Foo {
    public void a(){}
    public void b(){}
    public Foo() {}
}</code>
    </test-code>

    <test-code>
        <description>bad 7</description>
        <expected-problems>1</expected-problems>
        <code>
// if the class has public enum or record member, they are also considered
public class Foo {
    public void a(){}
    public record Foo2(int a){}
    public enum Foo2{}
}</code>
    </test-code>

    <test-code>
        <description>bad 8</description>
        <expected-problems>1</expected-problems>
        <code>
// public method in enum is considered
private enum Foo {
    x1,
    x2;
    public void a(){}
}</code>
    </test-code>

    <test-code>
        <description>bad 9</description>
        <expected-problems>1</expected-problems>
        <code>
// public method,constructor,field,subclass,record in record is considered
private record Foo(int a, int b) {
    public void c(){}
    public int d;
    public Foo(int a, int b){}
    public class Foo2{}
    public record Foo3(int c){}
}</code>
    </test-code>

</test-data>
