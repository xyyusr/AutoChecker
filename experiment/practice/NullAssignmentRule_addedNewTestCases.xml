<?xml version='1.0' encoding='utf-8'?>
<test-data>

    <test-code>
        <description>bad 6</description>
        <expected-problems>1</expected-problems>
        <code>
public class Foo {
    final String x;
    final String y;
    public void foo() {
        // assign null to final fields is ok, ok
        y = null;
    }
    public void foo() {
        // but null assignment in conditional expression to final fields is bad, violation
        x = bar() ? "fiz" : null;
    }
    private boolean bar() { return true; }
}</code>
    </test-code>

    <test-code>
        <description>bad 7</description>
        <expected-problems>1</expected-problems>
        <code>
public class Foo {
    final String x;
    public void foo() {
        // this is a field access
        this.x = bar() ? "fiz" : null;
    }
    private boolean bar() { return true; }
}
</code>
    </test-code>

    <test-code>
        <description>bad 8</description>
        <expected-problems>1</expected-problems>
        <code>
public class Foo {
    final String x;
    public void foo() {
        // this is a field access
        this.x = bar() ? null : "fiz";
    }
    private boolean bar() { return true; }
}</code>
    </test-code>

    <test-code>
        <description>bad 9</description>
        <expected-problems>1</expected-problems>
        <code>
public class Foo {
    public void foo() {
        Object[] x = new Object[2];
        x[0] = null; // This is bad
    }
}</code>
    </test-code>

    <test-code>
        <description>bad 10</description>
        <expected-problems>1</expected-problems>
        <code>
public class Foo {
    public void foo() {
        // if the original declaration node of accessed variable could not be obtained, also violate the rule
         Foo2.x=null;
    }
}
public class Foo2{}</code>
    </test-code>

</test-data>